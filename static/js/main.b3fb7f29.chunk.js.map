{"version":3,"sources":["common/helpers/history.js","common/routerConstants.js","actions/axiosConfig.js","actions/dictionary.js","common/actionTypes/dictionary.js","components/LangChoice/index.js","components/Header/index.js","components/AddWordForm/index.js","components/Menu/index.js","components/Footer/index.js","components/TranslationForm/index.js","components/SingleCard/index.js","components/Content/index.js","pages/Dictionary.js","Routes.js","App.js","reducers/app.js","reducers/dictionary.js","reducers/index.js","common/actionTypes/app.js","store/store.js","localStorage.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","axios","axiosBase","create","baseURL","process","REACT_APP_API_BASE_URL","timeout","addWord","word","dispatch","a","url","method","params","key","text","value","lang","source","target","then","res","translation","data","type","toggleBox","id","setLanguages","ui","langs","setSource","setTarget","Choice","props","handleChange","event","setState","name","chooseTarget","localStorage","setItem","chooseSource","setSourceLang","sourceLang","targetLang","state","this","optionComponents","push","optionComponent","map","option","className","onChange","React","Component","connect","dictionary","bindActionCreators","Header","title","Form","handleClick","words","v4","length","alert","completed","placeholder","onClick","Menu","trigger","position","closeOnDocumentClick","close","Footer","href","TranslationForm","SingleCard","isShown","onMouseEnter","onMouseLeave","checked","component","Object","values","reverse","filter","createComponent","Dictionary","isLoading","PureComponent","app","withRouter","Routes","exact","path","routes","App","initialState","transaltion","appReducer","combineReducers","action","rootReducer","persistedState","serializedState","getItem","JSON","parse","err","loadState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","subscribe","stringify","saveState","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3fb7f29.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\nexport const history = createBrowserHistory()\n","export default {\n  root: '/',\n  notFound: '*',\n}\n","import { default as axiosBase } from 'axios'\n\nexport const axios = axiosBase.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  timeout: 20000,\n})\n","import * as types from '../common/actionTypes/dictionary'\nimport { axios } from './axiosConfig'\nimport { setAppLoading } from './app'\n\nexport const addWord = (word) => async (dispatch) => {\n  await axios({\n    url: 'https://translate.yandex.net/api/v1.5/tr.json/translate',\n    method: 'GET',\n    params: {\n      key: process.env.REACT_APP_YANDEX_API_KEY,\n      text: word.value,\n      lang: word.source + '-' + word.target,\n    },\n  }).then((res) => (word.translation = res.data.text))\n  dispatch({\n    type: types.ADD_WORD,\n    data: word,\n  })\n}\n\nexport const toggleBox = (id) => (dispatch) => {\n  dispatch({\n    type: types.TOGGLE_BOX,\n    data: id,\n  })\n}\n\nexport const setLanguages = () => async (dispatch) => {\n  const res = await axios({\n    url: 'https://translate.yandex.net/api/v1.5/tr.json/getLangs',\n    method: 'GET',\n    params: {\n      key: process.env.REACT_APP_YANDEX_API_KEY,\n      ui: 'en',\n    },\n  })\n  dispatch({\n    type: types.SET_LANGS,\n    data: res.data.langs,\n  })\n}\n\nexport const setSource = (lang) => (dispatch) => {\n  dispatch({\n    type: types.SET_SOURCE,\n    data: lang,\n  })\n}\n\nexport const setTarget = (lang) => (dispatch) => {\n  dispatch({\n    type: types.SET_TARGET,\n    data: lang,\n  })\n}\n\nexport const getTranslation = async (word, from, to) => {\n  /*axios.get(\"https://translate.yandex.net/api/v1.5/tr.json/translate?key=\" +\n        \"trnsl.1.1.20200517T142351Z.c69a6ea386326cff.a964b2bce894646453704e9203644db56cc5b39b&text\" + word +\n        '&lang' + from + \"-\" + to)\n        .then(data => this.setState({translation: data.data.text}))\n        .catch(err => console.log(err));*/\n  const translation = await axios({\n    url: 'https://translate.yandex.net/api/v1.5/tr.json/translate',\n    method: 'GET',\n    params: {\n      key:\n        'trnsl.1.1.20200517T142351Z.c69a6ea386326cff.a964b2bce894646453704e9203644db56cc5b39b',\n      text: word,\n      lang: from + '-' + to,\n    },\n  })\n  return translation.data.text\n}\n","export const ADD_WORD = 'ADD_WORD'\nexport const SET_LANGS = 'SET_LANGS'\nexport const SET_TARGET = 'SET_TARGET'\nexport const SET_SOURCE = 'SET_SOURCE'\nexport const TOGGLE_BOX = 'TOGGLE_BOX'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { setSource, setTarget } from '../../actions/dictionary'\n\nclass Choice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: 'Select a  language...',\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value })\n    if (this.props.name === 'target') {\n      this.chooseTarget(event.target.value)\n      localStorage.setItem('targetLang', event.target.value)\n    } else if (this.props.name === 'source') {\n      this.chooseSource(event.target.value)\n      this.props.setSourceLang(event.target.value)\n    }\n  }\n\n  chooseSource = (lang) => {\n    const { setSource } = this.props\n    this.setState({ sourceLang: lang })\n    setSource(lang)\n  }\n\n  chooseTarget = (lang) => {\n    const { setTarget } = this.props\n    this.setState({ targetLang: lang })\n    setTarget(lang)\n  }\n\n  render() {\n    const { langs } = this.props\n    const optionComponents = []\n    for (let key in langs) {\n      optionComponents.push({\n        id: key,\n        name: langs[key],\n      })\n    }\n\n    const optionComponent = optionComponents.map((option) => (\n      <option key={option.id} value={option.id}>\n        {option.name}\n      </option>\n    ))\n\n    return (\n      <div>\n        <select\n          className=\"select--field\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        >\n          <option name=\"noLanguageSelected\">Select a language...</option>\n          {optionComponent}\n        </select>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    langs: state.dictionary.langs,\n    sourceLang: state.dictionary.sourceLang,\n    targetLang: state.dictionary.targetLang,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      setSource,\n      setTarget,\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Choice)\n","import React from 'react'\nimport Choice from '../LangChoice'\n\nconst Header = ({ title }) => {\n  return (\n    <div className=\"header\">\n      <h2>{title}</h2>\n      <div className=\"target--choice\">\n        <Choice name=\"target\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Choice from '../LangChoice'\nimport { bindActionCreators } from 'redux'\nimport { addWord } from '../../actions/dictionary'\nimport { v4 } from 'node-uuid'\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: '',\n      value: '',\n      target: '',\n      source: '',\n      completed: false,\n      translation: '',\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ id: v4() })\n  }\n\n  handleClick = () => {\n    const { target, source } = this.state\n    const { words } = this.props\n    this.setState({ id: v4() })\n    if (words.length > 200) {\n      alert(\"You can't add more words, srr\")\n    } else if (target === '' || source === '') {\n      alert('Choose a language, bastard')\n    } else {\n      const { addWord } = this.props\n      addWord(this.state)\n      this.setState({ value: '' })\n    }\n  }\n\n  handleChange = (event) => {\n    const { targetLang } = this.props\n    this.setState({\n      value: event.target.value,\n      target: targetLang,\n    })\n  }\n\n  setSourceLang = (lang) => {\n    this.setState({ source: lang })\n  }\n\n  render() {\n    return (\n      <div className=\"add--form\">\n        <div className=\"input--form\">\n          <input\n            type=\"text\"\n            value={this.state.value}\n            placeholder=\"Enter word or phrase here\"\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"form--actions\">\n          <Choice name=\"source\" setSourceLang={this.setSourceLang} />\n          <button className=\"button--form\" onClick={this.handleClick}>\n            Add\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    targetLang: state.dictionary.targetLang,\n    words: state.dictionary.words,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      addWord,\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form)\n","import React from 'react'\nimport Form from '../AddWordForm'\nimport Popup from 'reactjs-popup'\n\nconst Menu = () => {\n  // TODO: change popup to my own\n\n  return (\n    <div className=\"menu\">\n      <div className=\"menu--container\">\n        <div className=\"rules--title\">\n          <h4>Rules</h4>\n        </div>\n        <div className=\"rules--text\">\n          <p className=\"paragraph\">\n            Hi there! You are in my pseudo dictionary <span>👺</span>\n          </p>\n          <p className=\"paragraph\">There are some tips:</p>\n          <ul className=\"tips--container paragraph\">\n            <li>you can't add more than 200 words;</li>\n            <li>\n              <b>PLEASE</b> choose languages every time!\n            </li>\n          </ul>\n          <p className=\"paragraph\">Thanks.</p>\n        </div>\n        <Popup\n          trigger={\n            <div className=\"add--button--div\">\n              <button className=\"add--button\">ADD WORD</button>\n            </div>\n          }\n          position=\"top center\"\n          closeOnDocumentClick\n        >\n          {(close) => (\n            <div className=\"tooltip\">\n              <span className=\"close--button\" onClick={close}>\n                &times;\n              </span>\n              <Form />\n            </div>\n          )}\n        </Popup>\n      </div>\n    </div>\n  )\n}\n\nexport default Menu\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        Powered by{' '}\n        <a href=\"http://translate.yandex.ru/\" className=\"linkToWebsite\">\n          Yandex.Translate\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst TranslationForm = ({ word, target, source, translation }) => {\n  return (\n    <div className=\"popup--translation\">\n      <div className=\"first--string\">\n        <div className=\"popup--info popup--word\">{word}</div>\n        <div className=\"popup--info popup--lang\">{source}</div>\n      </div>\n      <div className=\"second--string\">\n        <div className=\"popup--info popup--word\">{translation}</div>\n        <div className=\"popup--info popup--lang\">{target}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default TranslationForm\n","import React from 'react'\nimport TranslationForm from '../TranslationForm'\nimport { bindActionCreators } from 'redux'\nimport { toggleBox } from '../../actions/dictionary'\nimport { connect } from 'react-redux'\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutlined'\n\nclass SingleCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isShown: false,\n    }\n  }\n  // TODO: add action to delete button, add handler which add class to the checked card\n\n  render() {\n    const { word, source, target, translation, completed, id, key } = this.props\n    const { toggleBox } = this.props\n    return (\n      <div>\n        <div\n          className=\"cards--container\"\n          onMouseEnter={() => this.setState({ isShown: true })}\n          onMouseLeave={() => this.setState({ isShown: false })}\n        >\n          <div className=\"card--column\">{word}</div>\n          <div className=\"card--column\">{source}</div>\n          <div className=\"card--column\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={completed}\n                onChange={() => toggleBox(id)}\n              />\n            </label>\n          </div>\n          <div className=\"delete--button card--column\">\n            <DeleteOutlineIcon />\n          </div>\n        </div>\n        <div>\n          {this.state.isShown && (\n            <TranslationForm\n              word={word}\n              source={source}\n              target={target}\n              translation={translation}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      toggleBox,\n    },\n    dispatch\n  )\n}\n\nexport default connect(null, mapDispatchToProps)(SingleCard)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport SingleCard from '../SingleCard'\n\nconst Content = ({ words }) => {\n  function createComponent(words) {\n    let id = 0\n    const component = Object.values(words)\n      .map((word) => (\n        <SingleCard\n          key={id++}\n          id={word.id}\n          word={word.value}\n          translation={word.translation}\n          source={word.source}\n          target={word.target}\n          completed={word.completed}\n        />\n      ))\n      .reverse()\n    const filteredArray = [\n      component.filter((word) => !word.props.completed),\n      component.filter((word) => word.props.completed),\n    ]\n    return filteredArray\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"separated--container\">\n        <div className=\"labels--div\">\n          <ul className=\"label--container\">\n            <li className=\"li--column\">\n              <span>Word</span>\n            </li>\n            <li className=\"li--column\">\n              <span>Source Language</span>\n            </li>\n            <li className=\"li--column\">\n              <span>Learned</span>\n            </li>\n          </ul>\n        </div>\n        <div className=\"cards\">{createComponent(words)}</div>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    words: state.dictionary.words,\n  }\n}\n\nexport default connect(mapStateToProps, null)(Content)\n","import React, { PureComponent } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { setLanguages } from '../actions/dictionary'\nimport Header from '../components/Header'\nimport Menu from '../components/Menu'\nimport Footer from '../components/Footer'\nimport Content from '../components/Content'\nimport Choice from '../components/LangChoice'\n\nclass Dictionary extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      sourceLang: '',\n      targetLang: '',\n    }\n  }\n\n  async componentDidMount() {\n    const { setLanguages } = this.props\n    setLanguages()\n  }\n\n  render() {\n    const { title } = this.props\n    return (\n      <div className=\"container\">\n        <Header title={title} />\n        <Menu />\n        <Content />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    title: state.app.title,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      setLanguages,\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dictionary))\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport routes from './common/routerConstants'\nimport Dictionary from './pages/Dictionary'\n\nconst Routes = () => (\n  <>\n    <Switch>\n      <Route exact path={routes.root} component={Dictionary} />\n      <Route path={routes.notFound} component={() => <h1>Not Found</h1>} />\n    </Switch>\n  </>\n)\n\nexport default Routes\n","import React from 'react'\nimport { history } from './common/helpers/history'\nimport { Router } from 'react-router-dom'\nimport Routes from './Routes.js'\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Routes />\n    </Router>\n  )\n}\n\nexport default App\n","import * as types from '../common/actionTypes/app'\n\nexport const initialState = {\n  title: 'Vocabulary Check',\n  isLoading: false,\n}\n\nexport default function app(state = initialState, action) {\n  switch (action.type) {\n    case types.SET_LOADING:\n      return { ...state, isLoading: action.data }\n    default:\n      return state\n  }\n}\n","import * as types from '../common/actionTypes/dictionary'\n\nexport const initialState = {\n  words: [],\n  langs: [],\n  transaltion: [],\n  sourceLang: '',\n  targetLang: '',\n}\n\nexport default function dictionary(state = initialState, action) {\n  switch (action.type) {\n    case types.ADD_WORD:\n      return { ...state, words: [...state.words, action.data] }\n    case types.SET_LANGS:\n      return { ...state, langs: action.data }\n    case types.SET_SOURCE:\n      return { ...state, sourceLang: action.data }\n    case types.SET_TARGET:\n      return { ...state, targetLang: action.data }\n    case types.TOGGLE_BOX:\n      return {\n        ...state,\n        words: state.words.map((word) =>\n          word.id === action.data ? { ...word, completed: !word.completed } : word\n        ),\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport app from './app'\nimport dictionary from './dictionary'\n\nconst appReducer = combineReducers({\n  app,\n  dictionary,\n})\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action)\n}\n\nexport default rootReducer\n","export const SET_LOADING = 'SET_LOADING'\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\nimport { loadState } from '../localStorage'\n\nconst persistedState = loadState()\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  composeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('words')\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('words', serializedState)\n  } catch (err) {\n    // Ignore\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './common/styles/index.scss'\nimport App from './App'\nimport store from './store/store'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { saveState } from './localStorage'\n\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}